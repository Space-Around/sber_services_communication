version: '3'

x-minio-common: &minio-common
  image: quay.io/minio/minio:RELEASE.2022-04-12T06-55-35Z
  command: server --console-address ":9001" http://minio{1...4}/data{1...2}
  expose:
    - "9000"
    - "9001"
  environment:
    MINIO_ROOT_USER: minioadmin
    MINIO_ROOT_PASSWORD: minioadmin
  healthcheck:
    test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
    interval: 30s
    timeout: 20s
    retries: 3

services:
  minio1:
    <<: *minio-common
    hostname: minio1
    volumes:
      - data1-1:/data1
      - data1-2:/data2
    networks:
      - default

  minio2:
    <<: *minio-common
    hostname: minio2
    volumes:
      - data2-1:/data1
      - data2-2:/data2
    networks:
      - default

  minio3:
    <<: *minio-common
    hostname: minio3
    volumes:
      - data3-1:/data1
      - data3-2:/data2
    networks:
      - default

  minio4:
    <<: *minio-common
    hostname: minio4
    volumes:
      - data4-1:/data1
      - data4-2:/data2
    networks:
      - default

  nginx:
    image: nginx:1.19.2-alpine
    hostname: nginx
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - "9000:9000"
      - "9001:9001"
    depends_on:
      - minio1
      - minio2
      - minio3
      - minio4
    networks:
      - default

  postgres:
    image: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: keycloak
      POSTGRES_USER: keycloak
      POSTGRES_PASSWORD: password
    networks:
      - default

  keycloak:
    image: quay.io/keycloak/keycloak:18.0.0
    command: start-dev -Dkeycloak.profile.feature.token_exchange=enabled -Dkeycloak.profile.feature.admin_fine_grained_authz=enabled
    volumes:
      - /cert/client1.csr:/opt/certs/client1.csr
      - /cert/client1.key:/opt/certs/client1.key
      - /cert/client1.pem:/opt/certs/client1.pem
      - /cert/client2.csr:/opt/certs/client2.csr
      - /cert/client2.key:/opt/certs/client2.key
      - /cert/client2.pem:/opt/certs/client2.pem
      - /cert/rootCA.key:/opt/certs/rootCA.key
      - /cert/rootCA.pem:/opt/certs/rootCA.pem
      - /cert/serial:/opt/certs/serial
    environment:
      DB_VENDOR: POSTGRES
      DB_ADDR: postgres
      DB_DATABASE: keycloak
      DB_USER: keycloak
      DB_SCHEMA: public
      DB_PASSWORD: password
      KEYCLOAK_USER: admin
      KEYCLOAK_PASSWORD: Pa55w0rd
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      KEYCLOAK_HTTPS_CERTIFICATE_FILE: /opt/certs/client2.pem
      KEYCLOAK_HTTPS_CERTIFICATE_KEY_FILE: /opt/certs/client2.key
    ports:
      - 8080:8080
    depends_on:
      - postgres
    networks:
      - default

  proxy:
    build: .
    restart: always
    command: python proxy_server.py
    volumes:
      - 'logs:/opt/logs:rw'
    ports:
      - "5000:5000"
    networks:
      - default

networks:
  #  bridge:
  #    external: true
  default:
    external:
      name: sber_net

volumes:
  logs:
  data1-1:
  data1-2:
  data2-1:
  data2-2:
  data3-1:
  data3-2:
  data4-1:
  data4-2:
  postgres_data:
    driver: local
